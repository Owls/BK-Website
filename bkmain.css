/* Affects BKMAIN HTML */

body
{
    background-color: #FFC300;
}

ul
{
  width: 2000px;
}

div
{
  font-family: 'IBM Plex Serif', serif;
}


/* Div for Dialouge Box */
.box
{
    position: absolute;
    height: 100px;
    width: 40%;
    margin-top: 30px;
    margin-left: 0%;
    margin-right: 10%;
    border-radius: 25px;
    background-color: #C70039;
}
    .right
{
    float: right;
}

/* Div for Layout Testing */
.bodytester
{
    border: 2px solid purple;
    width: 50%;
}
/* Container for Text Bubble */
/* Centerpiece of Header */

.jiggy
{
    border: 5px dotted black;
    border-radius: 50%;
    border-top-color: #196F3D;
    border-bottom-color: #C70039;
    border-left-color: #F1C40F;
    border-right-color: #1A5276;
    margin: auto;
    height: 141px;
    width: 141px;
    /* Allows Positioning of the Jiggy */
    position: relative;
    left: center;
    top: 338px;
    background: url("./jiggy.gif");
    background-size: 96%;
    background-repeat: no-repeat;
    z-index: 2;
} 

.bg-img
{
    /* Define Image */
    border: 2px solid green;
    background-image: url("./title.png");
    min-height: 400px;
    /* Center and Scale the Image */
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    

    /* Position our Navbar */
    position: relative;
}

/* Position Navbar in a Container */
.container
{
    position: absolute;
    margin: -2px;
    margin-top: 355px;
    width: auto;
}

/* Nav Bar */ 
ul
{
    list-style-type: none;
    margin: 0;
    padding: 0;
    overflow: hidden;
    background-color: #0943C2;
    position: -webkit-sticky; /* Safari Support */
    position: sticky;
    top: 0;
}

li
{
    float: left;
}

/* Affects Anchors inside of Lists */
li a 
{
    display: block;
    color: #FFC300;
    text-align: center; 
    padding: 14px 20px;
    text-decoration: none;
}

/* Applies the Attribute of "Hover" to the Element */
li a:hover
{
    background-color: #FC2E31;
}

.active
{
    background-color: #FC2E31;
}

p
{
    color: black;
}

.footer
{ 
    position: fixed;
    left: 0;
    bottom: 0;
    width: 100%;
    height:15px;
    background-color: #FC2E31;
    color: white;
    text-align: center;
}

/* Using the Keyframes rule, we can specify what happens on each Frame of an Animation */
@keyframes flicker {
    0% {
      opacity: 0.27861;
    }
    5% {
      opacity: 0.34769;
    }
    10% {
      opacity: 0.23604;
    }
    15% {
      opacity: 0.90626;
    }
    20% {
      opacity: 0.18128;
    }
    25% {
      opacity: 0.83891;
    }
    30% {
      opacity: 0.65583;
    }
    35% {
      opacity: 0.67807;
    }
    40% {
      opacity: 0.26559;
    }
    45% {
      opacity: 0.84693;
    }
    50% {
      opacity: 0.96019;
    }
    55% {
      opacity: 0.08594;
    }
    60% {
      opacity: 0.20313;
    }
    65% {
      opacity: 0.71988;
    }
    70% {
      opacity: 0.53455;
    }
    75% {
      opacity: 0.37288;
    }
    80% {
      opacity: 0.71428;
    }
    85% {
      opacity: 0.70419;
    }
    90% {
      opacity: 0.7003;
    }
    95% {
      opacity: 0.36108;
    }
    100% {
      opacity: 0.24387;
    }
  }

  /* Uses the Keyframe Rule to achieve Color Seperation */
  @keyframes textShadow {
    0% {
      text-shadow: 0.4389924193300864px 0 1px rgba(0,30,255,0.5), -0.4389924193300864px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    5% {
      text-shadow: 2.7928974010788217px 0 1px rgba(0,30,255,0.5), -2.7928974010788217px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    10% {
      text-shadow: 0.02956275843481219px 0 1px rgba(0,30,255,0.5), -0.02956275843481219px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    15% {
      text-shadow: 0.40218538552878136px 0 1px rgba(0,30,255,0.5), -0.40218538552878136px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    20% {
      text-shadow: 3.4794037899852017px 0 1px rgba(0,30,255,0.5), -3.4794037899852017px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    25% {
      text-shadow: 1.6125630401149584px 0 1px rgba(0,30,255,0.5), -1.6125630401149584px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    30% {
      text-shadow: 0.7015590085143956px 0 1px rgba(0,30,255,0.5), -0.7015590085143956px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    35% {
      text-shadow: 3.896914047650351px 0 1px rgba(0,30,255,0.5), -3.896914047650351px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    40% {
      text-shadow: 3.870905614848819px 0 1px rgba(0,30,255,0.5), -3.870905614848819px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    45% {
      text-shadow: 2.231056963361899px 0 1px rgba(0,30,255,0.5), -2.231056963361899px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    50% {
      text-shadow: 0.08084290417898504px 0 1px rgba(0,30,255,0.5), -0.08084290417898504px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    55% {
      text-shadow: 2.3758461067427543px 0 1px rgba(0,30,255,0.5), -2.3758461067427543px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    60% {
      text-shadow: 2.202193051050636px 0 1px rgba(0,30,255,0.5), -2.202193051050636px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    65% {
      text-shadow: 2.8638780614874975px 0 1px rgba(0,30,255,0.5), -2.8638780614874975px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    70% {
      text-shadow: 0.48874025155497314px 0 1px rgba(0,30,255,0.5), -0.48874025155497314px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    75% {
      text-shadow: 1.8948491305757957px 0 1px rgba(0,30,255,0.5), -1.8948491305757957px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    80% {
      text-shadow: 0.0833037308038857px 0 1px rgba(0,30,255,0.5), -0.0833037308038857px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    85% {
      text-shadow: 0.09769827255241735px 0 1px rgba(0,30,255,0.5), -0.09769827255241735px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    90% {
      text-shadow: 3.443339761481782px 0 1px rgba(0,30,255,0.5), -3.443339761481782px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    95% {
      text-shadow: 2.1841838852799786px 0 1px rgba(0,30,255,0.5), -2.1841838852799786px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    100% {
      text-shadow: 2.6208764473832513px 0 1px rgba(0,30,255,0.5), -2.6208764473832513px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
  }
  .crt::after 
  {
    content: " ";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background: rgba(18, 16, 16, 0.1);
    opacity: 0;
    z-index: 2;
    pointer-events: none;
    /* Setting to 0 is, ostensibly, turning the Flicker to off */
    animation: flicker 0 infinite;
  }

  /* Uses Liner Gradients and Background Size to Simulate Flicker */
  .crt::before 
  {
    content: " ";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background: linear-gradient(rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.25) 50%), linear-gradient(90deg, rgba(255, 0, 0, 0.06), rgba(0, 255, 0, 0.02), rgba(0, 0, 255, 0.06));
    z-index: 2;
    background-size: 100% 2px, 3px 100%;
    pointer-events: none;
  }
  .crt 
  {
    animation: textShadow 1.6s infinite;
  }