/*
                     _     _                   _          _
*/

body
{
  font-family: sans-serif;
  /*background: url("./ASSETS/giphy.gif");*/
  background-size: cover;
  background-color: black;
  opacity: 6;
}


a
{
  color: #ff5f2e;
}

button
{
  position: fixed;
  right: 20px;
  bottom: 20px;
  padding: 20px;
  font-weight: 700;
  font-size: 16px;
}

h1
{
  text-align: center;
}

.tvborder
{
  width: 900px;
  height: 918px;
  border: 2px solid black;
  padding: 25px;
  margin: auto;
  background: url("ASSETS/crt-frameiii.png");
  background-repeat: no-repeat;
  background-size: 100%;
}


/* Affects the Image inside of the CRT Screen */

.tvscreen
{
  margin: 65px auto;
  /*border: 2px solid orange;*/
  /* Centered Black Background to simulate screen being off. */
  width: 740px;
  height: 600px;
  /* Recesses Element behind other Elements */
  z-index: 1;
  background-color: black;
}

.content
{
  /*border: 2px solid green;*/
  /* Centered Black Background to simulate screen being off. */
  max-width: 740px;
  height: 600px;
  z-index: 1;
  content: " ";
  overflow: hidden;
  /* Fallback for old browsers */
  background: #16222A;
  background: -webkit-linear-gradient(to left, #16222A, #3A6073);
  background: linear-gradient(to left, #16222A, #3A6073);
  background-size: cover;
  background-image: url("ASSETS/dxskyboxrd.png");
  color: #e1eef6;
  height: 100%;
  width: 100%;
  /* Adds blur to screen */
  filter: blur(1px);
  opacity: 2;
  position: relative;
  /*display: none;*/
}

/* Check position absolute an z-index */
/* COPY TEMPLATE HERE */
.boxoverlay
{
  position: absolute;
  z-index: 2;
  height: 15%;
  width: 55%;
  top: 35%;
  left: 22.5%;
  background: url("ASSETS/textbox.gif");
  background-size: contain;
  background-position: center center;
  background-repeat: no-repeat;
}

.splashscreen
{
  height: 100%;
  width: 100%;
  background: url("ASSETS/saturnstart.gif");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  display: none;
  z-index: -2;
}


/* When Interacting with the Power Button, turns screen on */

.powerbutton
{
  /*border: 2px solid firebrick;*/
  width: 50px;
  height: 37px;
  /* Position of Button */
  margin-left: 91%;
  margin-right: 9%;
  margin-top: 64px;
  position: absolute;
}

/* When Interacting with the Volume Buttons, incramentally changes Volume */
.volumeupbutton
{
  /*border: 2px solid #ec0cd1;*/
  width: 50px;
  height: 37px;
  /* Position of Button */
  margin-left: 80%;
  margin-right: 20%;
  margin-top: 64px;
  position: absolute;
}

/* When Interacting with the Volume Buttons, incramentally changes Volume */
.volumedownbutton
{
  /*border: 2px solid #fbff00;*/
  width: 50px;
  height: 37px;
  /* Position of Button */
  margin-left: 80%;
  margin-right: 20%;
  margin-top: 116px;
  position: absolute;
}

.container
{
  position: relative;
  /*border: 2px solid blue;*/
  width: 100%;
  height: 200px;
}

.containerII
{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  top: -5vh;
  height: 100%;
  width: 100%;
  position: relative;
}

.centered
{
  /*position: absolute;*/
  width: 100%;
  text-align: center;
}


.box
{
  border: 2px solid firebrick;
  height: 20px;
  width: 20px;
  opacity: 3;
  border-radius: 50%;
  background-image: url("ASSETS/original.png");
  background-position: center center;
  background-size: cover;
  background-color: mediumslateblue;
  /* Provide a name for animation, delay start of animation, specify duration of the animation, and how many times it repeats */
  animation-name: stupidity;
  animation-duration: 10s;
  animation-iteration-count: infinite;
  animation-delay: 2s;
  /* Makes smood */
  transition: 0.2s ease;
}

/* This functionality is currently unused */
@keyframes stupidity
{
  0%
  {   /* Start - Format is X , Y */
    transform: translate(0, 0) rotate(0deg);
    background-color: steelblue;
  }

  25%
  { /* Moves to Top Right Corner */
    transform: translate(93vw, 0) rotate(100deg);
    background-color: mediumspringgreen;
  }

  50%
  {   /* Moves to Bottom Right Corner */
    transform: translate(93vw, 93vh) rotate(175deg);
    background-color: #F1C40F;
  }

  75%
  {   /* Moves to Bottom Left Corner */
    transform: translate(0, 93vh) rotate(200deg);
    background-color: indianred;
  }

  100%
  {   /* Back to Start */
    transform: translate(0, 0) rotate(0deg);
    background-color: mediumslateblue;
  }
}


/* Using the Keyframes rule, we can specify what happens on each Frame of an Animation */
@keyframes flicker
{
  0% {
    opacity: 0.27861;
  }
  5% {
    opacity: 0.34769;
  }
  10% {
    opacity: 0.23604;
  }
  15% {
    opacity: 0.90626;
  }
  20% {
    opacity: 0.18128;
  }
  25% {
    opacity: 0.83891;
  }
  30% {
    opacity: 0.65583;
  }
  35% {
    opacity: 0.67807;
  }
  40% {
    opacity: 0.26559;
  }
  45% {
    opacity: 0.84693;
  }
  50% {
    opacity: 0.96019;
  }
  55% {
    opacity: 0.08594;
  }
  60% {
    opacity: 0.20313;
  }
  65% {
    opacity: 0.71988;
  }
  70% {
    opacity: 0.53455;
  }
  75% {
    opacity: 0.37288;
  }
  80% {
    opacity: 0.71428;
  }
  85% {
    opacity: 0.70419;
  }
  90% {
    opacity: 0.7003;
  }
  95% {
    opacity: 0.36108;
  }
  100% {
    opacity: 0.24387;
  }
}

/* Uses the Keyframe Rule to achieve Color Seperation */
@keyframes textShadow
{
  0% {
    text-shadow: 0.4389924193300864px 0 1px rgba(0,30,255,0.5), -0.4389924193300864px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  5% {
    text-shadow: 2.7928974010788217px 0 1px rgba(0,30,255,0.5), -2.7928974010788217px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  10% {
    text-shadow: 0.02956275843481219px 0 1px rgba(0,30,255,0.5), -0.02956275843481219px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  15% {
    text-shadow: 0.40218538552878136px 0 1px rgba(0,30,255,0.5), -0.40218538552878136px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  20% {
    text-shadow: 3.4794037899852017px 0 1px rgba(0,30,255,0.5), -3.4794037899852017px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  25% {
    text-shadow: 1.6125630401149584px 0 1px rgba(0,30,255,0.5), -1.6125630401149584px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  30% {
    text-shadow: 0.7015590085143956px 0 1px rgba(0,30,255,0.5), -0.7015590085143956px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  35% {
    text-shadow: 3.896914047650351px 0 1px rgba(0,30,255,0.5), -3.896914047650351px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  40% {
    text-shadow: 3.870905614848819px 0 1px rgba(0,30,255,0.5), -3.870905614848819px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  45% {
    text-shadow: 2.231056963361899px 0 1px rgba(0,30,255,0.5), -2.231056963361899px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  50% {
    text-shadow: 0.08084290417898504px 0 1px rgba(0,30,255,0.5), -0.08084290417898504px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  55% {
    text-shadow: 2.3758461067427543px 0 1px rgba(0,30,255,0.5), -2.3758461067427543px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  60% {
    text-shadow: 2.202193051050636px 0 1px rgba(0,30,255,0.5), -2.202193051050636px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  65% {
    text-shadow: 2.8638780614874975px 0 1px rgba(0,30,255,0.5), -2.8638780614874975px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  70% {
    text-shadow: 0.48874025155497314px 0 1px rgba(0,30,255,0.5), -0.48874025155497314px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  75% {
    text-shadow: 1.8948491305757957px 0 1px rgba(0,30,255,0.5), -1.8948491305757957px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  80% {
    text-shadow: 0.0833037308038857px 0 1px rgba(0,30,255,0.5), -0.0833037308038857px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  85% {
    text-shadow: 0.09769827255241735px 0 1px rgba(0,30,255,0.5), -0.09769827255241735px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  90% {
    text-shadow: 3.443339761481782px 0 1px rgba(0,30,255,0.5), -3.443339761481782px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  95% {
    text-shadow: 2.1841838852799786px 0 1px rgba(0,30,255,0.5), -2.1841838852799786px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  100% {
    text-shadow: 2.6208764473832513px 0 1px rgba(0,30,255,0.5), -2.6208764473832513px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
}
.crt::after
{
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: rgba(18, 16, 16, 0.1);
  opacity: 0;
  z-index: 4;
  pointer-events: none;
  /* Setting to 0 is, ostensibly, turning the Flicker to off */
  animation: flicker 2.7s infinite;
}

/* Uses Liner Gradients and Background Size to Simulate Flicker */
.crt::before
{
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: linear-gradient(rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.25) 50%), linear-gradient(90deg, rgba(255, 0, 0, 0.06), rgba(0, 255, 0, 0.02), rgba(0, 0, 255, 0.06));
  z-index: 4;
  background-size: 100% 2px, 3px 100%;
  pointer-events: none;
}
.crt
{
  animation: textShadow 1.6s infinite;
}

